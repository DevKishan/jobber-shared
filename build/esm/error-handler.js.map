{"version":3,"file":"error-handler.js","names":["StatusCodes","CustomError","Error","constructor","message","comingFrom","statusCode","status","serializeErrors","BadRequestError","BAD_REQUEST","NotFoundError","NOT_FOUND","NotAuthorizedError","UNAUTHORIZED","FileTooLargeError","REQUEST_TOO_LONG","ServerError","SERVICE_UNAVAILABLE"],"sources":["../../src/error-handler.ts"],"sourcesContent":["import {\n    StatusCodes\n} from 'http-status-codes';\n\nexport interface IError {\n    message:string;\n    statusCode:number;\n    status:string;\n    comingFrom:string;\n}\n\nexport interface IErrorResponse {\n    message:string;\n    statusCode:number;\n    status:string;\n    comingFrom:string;\n    serializeErrors():IError\n}\n\nexport abstract class CustomError  extends Error {\n    abstract statusCode:number;\n    abstract status:string;\n    comingFrom:string;\n    constructor( message:string, comingFrom:string ) {\n        super(message);\n        this.comingFrom = comingFrom;\n    }\n\n    serializeErrors():IError{\n        return {\n            message:this.message,\n            statusCode:this.statusCode,\n            status:this.status,\n            comingFrom:this.comingFrom\n        }\n    }\n}\n\nexport class BadRequestError extends CustomError {\n    statusCode = StatusCodes.BAD_REQUEST;\n    status= 'error';\n    constructor( message:string, comingFrom:string ) {\n        super(message,comingFrom);\n    }\n}\n\nexport class NotFoundError extends CustomError {\n    statusCode = StatusCodes.NOT_FOUND;\n    status= 'error';\n    constructor( message:string, comingFrom:string ) {\n        super(message,comingFrom);\n    }\n}\n\nexport class NotAuthorizedError extends CustomError {\n    statusCode = StatusCodes.UNAUTHORIZED;\n    status= 'error';\n    constructor( message:string, comingFrom:string ) {\n        super(message,comingFrom);\n    }\n}\n\nexport class FileTooLargeError extends CustomError {\n    statusCode = StatusCodes.REQUEST_TOO_LONG;\n    status= 'error';\n    constructor( message:string, comingFrom:string ) {\n        super(message,comingFrom);\n    }\n}\n\nexport class ServerError extends CustomError {\n    statusCode = StatusCodes.SERVICE_UNAVAILABLE;\n    status= 'error';\n    constructor( message:string, comingFrom:string ) {\n        super(message,comingFrom);\n    }\n}\n\nexport interface ErrorException extends Error {\n    errno?:number;\n    code?:string;\n    path?:string;\n    syscall?:string;\n    stack?:string;\n}"],"mappings":"AAAA,SACIA,WAAW,QACR,mBAAmB;AAiB1B,OAAO,MAAeC,WAAW,SAAUC,KAAK,CAAC;EAI7CC,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,CAAC;IAAC,KAJVE,UAAU;IAAA,KACVC,MAAM;IAAA,KACfF,UAAU;IAGN,IAAI,CAACA,UAAU,GAAGA,UAAU;EAChC;EAEAG,eAAeA,CAAA,EAAS;IACpB,OAAO;MACHJ,OAAO,EAAC,IAAI,CAACA,OAAO;MACpBE,UAAU,EAAC,IAAI,CAACA,UAAU;MAC1BC,MAAM,EAAC,IAAI,CAACA,MAAM;MAClBF,UAAU,EAAC,IAAI,CAACA;IACpB,CAAC;EACL;AACJ;AAEA,OAAO,MAAMI,eAAe,SAASR,WAAW,CAAC;EAG7CE,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,EAACC,UAAU,CAAC;IAAC,KAH9BC,UAAU,GAAGN,WAAW,CAACU,WAAW;IAAA,KACpCH,MAAM,GAAE,OAAO;EAGf;AACJ;AAEA,OAAO,MAAMI,aAAa,SAASV,WAAW,CAAC;EAG3CE,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,EAACC,UAAU,CAAC;IAAC,KAH9BC,UAAU,GAAGN,WAAW,CAACY,SAAS;IAAA,KAClCL,MAAM,GAAE,OAAO;EAGf;AACJ;AAEA,OAAO,MAAMM,kBAAkB,SAASZ,WAAW,CAAC;EAGhDE,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,EAACC,UAAU,CAAC;IAAC,KAH9BC,UAAU,GAAGN,WAAW,CAACc,YAAY;IAAA,KACrCP,MAAM,GAAE,OAAO;EAGf;AACJ;AAEA,OAAO,MAAMQ,iBAAiB,SAASd,WAAW,CAAC;EAG/CE,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,EAACC,UAAU,CAAC;IAAC,KAH9BC,UAAU,GAAGN,WAAW,CAACgB,gBAAgB;IAAA,KACzCT,MAAM,GAAE,OAAO;EAGf;AACJ;AAEA,OAAO,MAAMU,WAAW,SAAShB,WAAW,CAAC;EAGzCE,WAAWA,CAAEC,OAAc,EAAEC,UAAiB,EAAG;IAC7C,KAAK,CAACD,OAAO,EAACC,UAAU,CAAC;IAAC,KAH9BC,UAAU,GAAGN,WAAW,CAACkB,mBAAmB;IAAA,KAC5CX,MAAM,GAAE,OAAO;EAGf;AACJ","ignoreList":[]}